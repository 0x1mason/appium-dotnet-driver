<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>10.0.0</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FEC5A212-89D1-4D26-B545-E79B56C43C67}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>OpenQA.Selenium.Appium</RootNamespace>
    <AssemblyName>appium-dotnet-driver</AssemblyName>
    <RestorePackages>true</RestorePackages>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">.\</SolutionDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <WarningLevel>4</WarningLevel>
    <Optimize>false</Optimize>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <OutputPath>bin\Release\</OutputPath>
    <Optimize>true</Optimize>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <Compile Include="src\Appium\Interfaces\IFindByAccessibilityId.cs" />
    <Compile Include="src\Appium\MultiTouch\MultiTouchAction.cs" />
    <Compile Include="src\Appium\MultiTouch\RemoteMultiTouchScreen.cs" />
    <Compile Include="src\Appium\MultiTouch\WaitAction.cs" />
    <Compile Include="src\Appium\ScreenOrientationExtensions.cs" />
    <Compile Include="src\Appium\TouchExtensions.cs" />
    <Compile Include="test\FakeAppium.cs" />
    <Compile Include="src\Appium\AppiumDriver.cs" />
    <Compile Include="test\MJsonMethodTest.cs" />
    <Compile Include="test\SessionTest.cs" />
    <Compile Include="src\Appium\CommandExecutorFactory.cs" />
    <Compile Include="src\Appium\ByIosUIAutomation.cs" />
    <Compile Include="test\SelectorTest.cs" />
    <Compile Include="src\Appium\ByAndroidUIAutomator.cs" />
    <Compile Include="src\Appium\ByAccessibilityId.cs" />
    <Compile Include="src\Appium\AppiumWebElement.cs" />
    <Compile Include="src\Appium\AppiumDriverCommand.cs" />
    <Compile Include="test\TouchTest.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="nunit.framework">
      <HintPath>$(SolutionDir)\packages\NUnit.2.6.3\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Net" />
    <Reference Include="System.Drawing" />
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(SolutionDir)\packages\Newtonsoft.Json.6.0.3\lib\net40\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="WebDriver">
      <HintPath>$(SolutionDir)\packages\Selenium.WebDriver.2.41.0\lib\net40\WebDriver.dll</HintPath>
    </Reference>
  </ItemGroup>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
</Project>